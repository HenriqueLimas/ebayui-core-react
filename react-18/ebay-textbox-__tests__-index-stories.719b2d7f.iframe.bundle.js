"use strict";(self.webpackChunk_ebay_ui_core_react=self.webpackChunk_ebay_ui_core_react||[]).push([[6900],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>chunk_AY7I2SME.XI});var chunk_AY7I2SME=__webpack_require__("./node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/ebay-textbox/__tests__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutofocusedTextbox:()=>AutofocusedTextbox,ControlValueFromOutside:()=>ControlValueFromOutside,DefaultTextbox:()=>DefaultTextbox,DisabledTextbox:()=>DisabledTextbox,FloatingLabel:()=>FloatingLabel,FloatingLabelInvalid:()=>FloatingLabelInvalid,FloatingLabelTypeDate:()=>FloatingLabelTypeDate,FloatingLabelWithAutofocus:()=>FloatingLabelWithAutofocus,FloatingLabelWithMultiline:()=>FloatingLabelWithMultiline,FloatingLabelWithMultilineAndOpaqueLabel:()=>FloatingLabelWithMultilineAndOpaqueLabel,FloatingLabelWithPlaceholderControlled:()=>FloatingLabelWithPlaceholderControlled,FloatingLabelWithValue:()=>FloatingLabelWithValue,FluidTextbox:()=>FluidTextbox,InvalidTextbox:()=>InvalidTextbox,LargeTextbox:()=>LargeTextbox,MultilineInvalidTextbox:()=>MultilineInvalidTextbox,MultilineTextbox:()=>MultilineTextbox,PasswordTextbox:()=>PasswordTextbox,PlaceholderTextbox:()=>PlaceholderTextbox,RefForwarding:()=>RefForwarding,TestingCallbacks:()=>TestingCallbacks,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_ebay_button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/ebay-button/index.ts"),_index__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/ebay-textbox/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import React, { ChangeEvent, FC, useState, KeyboardEvent, MouseEvent } from 'react'\nimport { action } from '@storybook/addon-actions'\nimport { EbayButton } from '../../ebay-button'\nimport { EbayTextbox, EbayTextboxPostfixIcon, EbayTextboxPrefixIcon } from '../index'\n\nexport default {\n    title: 'form input/ebay-textbox'\n}\n\nexport const DefaultTextbox = {\n    render: () => <EbayTextbox defaultValue=\"EbayTextbox\" />,\n    name: 'Default textbox'\n}\n\nexport const TestingCallbacks = {\n    render: () => {\n        const TestComponent: FC = () => {\n            const ref = React.useRef(null)\n            const [value, setValue] = useState('')\n\n            const handleInputChange = (\n                e: ChangeEvent<HTMLTextAreaElement & HTMLInputElement>,\n                props: { value: string }\n            ) => {\n                action('onInputChange')(e, props)\n                setValue(props.value)\n            }\n            const handleButtonClick = (\n                e: KeyboardEvent & MouseEvent<HTMLTextAreaElement & HTMLInputElement>,\n                props: { value: string }\n            ) => {\n                action('onButtonClick')(e, props)\n                setValue('')\n            }\n\n            return (\n                <form ref={ref}>\n                    <p>\n                        <EbayTextbox\n                            value={value}\n                            onChange={(e, props) => action('onChange')(e, props)}\n                            onInputChange={(e, props) => handleInputChange(e, props)}\n                            onFocus={(e, props) => action('onFocus')(e, props)}\n                            onBlur={(e, props) => action('onBlur')(e, props)}\n                            onKeyPress={(e, props) => action('onKeyPress')(e, props)}\n                            onKeyUp={(e, props) => action('onKeyUp')(e, props)}\n                            onKeyDown={(e, props) => action('onKeyDown')(e, props)}\n                            onInvalid={(e, props) => action('onInvalid')(e, props)}\n                            onButtonClick={(e, props) => handleButtonClick(e, props)}\n                            required\n                        >\n                            <EbayTextboxPostfixIcon\n                                name=\"clear16\"\n                                buttonAriaLabel=\"Clear\"\n                                style={{ opacity: value.length ? '1' : '0' }}\n                            />\n                        </EbayTextbox>\n                    </p>\n                    <p>\n                        <EbayButton\n                            onClick={(e) => {\n                                e.preventDefault()\n                                ref.current?.reportValidity()\n                            }}\n                        >\n                            Check value presence\n                        </EbayButton>\n                    </p>\n                </form>\n            )\n        }\n        return (\n            <>\n                <TestComponent />\n            </>\n        )\n    },\n\n    name: 'Testing callbacks'\n}\n\nexport const DisabledTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox disabled />\n        </>\n    ),\n\n    name: 'Disabled textbox'\n}\n\nexport const PlaceholderTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox placeholder=\"placeholder text\" />\n        </>\n    ),\n\n    name: 'Placeholder textbox'\n}\n\nexport const InvalidTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox invalid />\n        </>\n    ),\n\n    name: 'Invalid textbox'\n}\n\nexport const FluidTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox fluid />\n        </>\n    ),\n\n    name: 'Fluid textbox'\n}\n\nexport const PasswordTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox type=\"password\" />\n        </>\n    ),\n\n    name: 'Password textbox'\n}\n\nexport const MultilineTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox multiline defaultValue={'some default value\\nnext line'} />\n        </>\n    ),\n\n    name: 'Multiline textbox'\n}\n\nexport const MultilineInvalidTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox multiline invalid defaultValue=\"some default value\" />\n        </>\n    ),\n\n    name: 'Multiline invalid textbox'\n}\n\nexport const AutofocusedTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox autoFocus placeholder=\"Should focus here\" />\n        </>\n    ),\n\n    name: 'Autofocused textbox'\n}\n\nexport const LargeTextbox = {\n    render: () => (\n        <>\n            <EbayTextbox placeholder=\"placeholder text\" inputSize=\"large\" />\n        </>\n    ),\n\n    name: 'Large textbox'\n}\n\nexport const WithIcon = {\n    render: () => (\n        <div>\n            <p>\n                <EbayTextbox placeholder=\"email\">\n                    <EbayTextboxPrefixIcon name=\"mail16\" />\n                </EbayTextbox>\n            </p>\n            <p>\n                <EbayTextbox placeholder=\"username\">\n                    <EbayTextboxPostfixIcon name=\"profile20\" />\n                </EbayTextbox>\n            </p>\n            <p>\n                <EbayTextbox placeholder=\"search\" onButtonClick={action('Clear!')}>\n                    <EbayTextboxPrefixIcon name=\"search16\" />\n                    <EbayTextboxPostfixIcon name=\"clear16\" buttonAriaLabel=\"Clear\" />\n                </EbayTextbox>\n            </p>\n        </div>\n    ),\n\n    name: 'With icon'\n}\n\nexport const ControlValueFromOutside = {\n    render: () => {\n        const Component = () => {\n            const [value, setValue] = useState('')\n\n            const handleOnChange = (e, props) => {\n                setValue(props.value.substring(0, 10))\n            }\n\n            return (\n                <EbayTextbox onInputChange={handleOnChange} value={value} placeholder=\"Max 10 chars\" />\n            )\n        }\n\n        return (\n            <>\n                <Component />\n            </>\n        )\n    },\n\n    name: 'Control value from outside'\n}\n\nexport const RefForwarding = {\n    render: () => {\n        const ref = React.createRef() as any\n\n        return (\n            <>\n                <EbayTextbox forwardedRef={ref} />\n            </>\n        )\n    },\n\n    name: 'Ref forwarding'\n}\n\nexport const FloatingLabel = {\n    render: () => (\n        <EbayTextbox\n            floatingLabel=\"Floating label\"\n            onChange={action('onChange')}\n            onInputChange={action('onInputChange')}\n            onFloatingLabelInit={() => action('onFloatingLabelInit')()}\n        />\n    ),\n\n    name: 'Floating label'\n}\n\nexport const FloatingLabelTypeDate = {\n    render: () => (\n        <EbayTextbox\n            type=\"date\"\n            floatingLabel=\"Floating label\"\n            onChange={action('onChange')}\n            onInputChange={action('onInputChange')}\n            onFloatingLabelInit={() => action('onFloatingLabelInit')()}\n        />\n    ),\n\n    name: 'Floating label type date'\n}\n\nexport const FloatingLabelWithValue = {\n    render: () => (\n        <EbayTextbox\n            onChange={action('textbox-changed')}\n            floatingLabel=\"Floating label\"\n            defaultValue=\"Default value\"\n        />\n    ),\n\n    name: 'Floating label with value'\n}\n\nexport const FloatingLabelInvalid = {\n    render: () => (\n        <EbayTextbox\n            invalid\n            onChange={action('textbox-changed')}\n            floatingLabel=\"Invalid Floating label\"\n        />\n    ),\n\n    name: 'Floating label invalid'\n}\n\nexport const FloatingLabelWithAutofocus = {\n    render: () => (\n        <>\n            <p>\n                <EbayTextbox floatingLabel=\"Regular field\" />\n            </p>\n            <p>\n                <EbayTextbox floatingLabel=\"Autofocused field\" autoFocus onFocus={action('onFocus')} />\n            </p>\n        </>\n    ),\n\n    name: 'Floating label with autofocus'\n}\n\nexport const FloatingLabelWithPlaceholderControlled = {\n    render: () => {\n        const Component = () => {\n            const [value, setValue] = useState('')\n\n            const handleOnChange = (e, { value: newValue }) => {\n                setValue(newValue.toLowerCase())\n            }\n\n            return (\n                <>\n                    <p>\n                        <EbayTextbox\n                            floatingLabel=\"Will convert to lowercase\"\n                            placeholder=\"Enter some UPPERCASE\"\n                            onChange={handleOnChange}\n                            value={value}\n                            size={30}\n                        />\n                    </p>\n                    <p>\n                        <EbayButton\n                            onClick={() => {\n                                setValue('changed text')\n                            }}\n                        >\n                            Change text\n                        </EbayButton>\n                    </p>\n                    <p>\n                        <EbayButton\n                            onClick={() => {\n                                setValue('')\n                            }}\n                        >\n                            Clear\n                        </EbayButton>\n                    </p>\n                </>\n            )\n        }\n\n        return (\n            <>\n                <Component />\n            </>\n        )\n    },\n\n    name: 'Floating label with placeholder, controlled'\n}\n\nexport const FloatingLabelWithMultiline = {\n    render: () => (\n        <EbayTextbox onChange={action('textbox-changed')} floatingLabel=\"Floating label\" multiline />\n    ),\n\n    name: 'Floating label with multiline'\n}\n\nexport const FloatingLabelWithMultilineAndOpaqueLabel = {\n    render: () => (\n        <EbayTextbox\n            onChange={action('textbox-changed')}\n            floatingLabel=\"Floating label\"\n            multiline\n            opaqueLabel\n        />\n    ),\n\n    name: 'Floating label with multiline and opaque label'\n}\n",locationsMap:{"default-textbox":{startLoc:{col:30,line:10},endLoc:{col:1,line:13},startBody:{col:30,line:10},endBody:{col:1,line:13}},"testing-callbacks":{startLoc:{col:32,line:15},endLoc:{col:1,line:80},startBody:{col:32,line:15},endBody:{col:1,line:80}},"disabled-textbox":{startLoc:{col:31,line:82},endLoc:{col:1,line:90},startBody:{col:31,line:82},endBody:{col:1,line:90}},"placeholder-textbox":{startLoc:{col:34,line:92},endLoc:{col:1,line:100},startBody:{col:34,line:92},endBody:{col:1,line:100}},"invalid-textbox":{startLoc:{col:30,line:102},endLoc:{col:1,line:110},startBody:{col:30,line:102},endBody:{col:1,line:110}},"fluid-textbox":{startLoc:{col:28,line:112},endLoc:{col:1,line:120},startBody:{col:28,line:112},endBody:{col:1,line:120}},"password-textbox":{startLoc:{col:31,line:122},endLoc:{col:1,line:130},startBody:{col:31,line:122},endBody:{col:1,line:130}},"multiline-textbox":{startLoc:{col:32,line:132},endLoc:{col:1,line:140},startBody:{col:32,line:132},endBody:{col:1,line:140}},"multiline-invalid-textbox":{startLoc:{col:39,line:142},endLoc:{col:1,line:150},startBody:{col:39,line:142},endBody:{col:1,line:150}},"autofocused-textbox":{startLoc:{col:34,line:152},endLoc:{col:1,line:160},startBody:{col:34,line:152},endBody:{col:1,line:160}},"large-textbox":{startLoc:{col:28,line:162},endLoc:{col:1,line:170},startBody:{col:28,line:162},endBody:{col:1,line:170}},"with-icon":{startLoc:{col:24,line:172},endLoc:{col:1,line:195},startBody:{col:24,line:172},endBody:{col:1,line:195}},"control-value-from-outside":{startLoc:{col:39,line:197},endLoc:{col:1,line:219},startBody:{col:39,line:197},endBody:{col:1,line:219}},"ref-forwarding":{startLoc:{col:29,line:221},endLoc:{col:1,line:233},startBody:{col:29,line:221},endBody:{col:1,line:233}},"floating-label":{startLoc:{col:29,line:235},endLoc:{col:1,line:246},startBody:{col:29,line:235},endBody:{col:1,line:246}},"floating-label-type-date":{startLoc:{col:37,line:248},endLoc:{col:1,line:260},startBody:{col:37,line:248},endBody:{col:1,line:260}},"floating-label-with-value":{startLoc:{col:38,line:262},endLoc:{col:1,line:272},startBody:{col:38,line:262},endBody:{col:1,line:272}},"floating-label-invalid":{startLoc:{col:36,line:274},endLoc:{col:1,line:284},startBody:{col:36,line:274},endBody:{col:1,line:284}},"floating-label-with-autofocus":{startLoc:{col:42,line:286},endLoc:{col:1,line:299},startBody:{col:42,line:286},endBody:{col:1,line:299}},"floating-label-with-placeholder-controlled":{startLoc:{col:54,line:301},endLoc:{col:1,line:351},startBody:{col:54,line:301},endBody:{col:1,line:351}},"floating-label-with-multiline":{startLoc:{col:42,line:353},endLoc:{col:1,line:359},startBody:{col:42,line:353},endBody:{col:1,line:359}},"floating-label-with-multiline-and-opaque-label":{startLoc:{col:56,line:361},endLoc:{col:1,line:372},startBody:{col:56,line:361},endBody:{col:1,line:372}}}}},title:"form input/ebay-textbox"};var DefaultTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{defaultValue:"EbayTextbox"})},name:"Default textbox"},TestingCallbacks={render:function render(){var TestComponent=function TestComponent(){var ref=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),_useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),2),value=_useState2[0],setValue=_useState2[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("form",{ref,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{value,onChange:function onChange(e,props){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onChange")(e,props)},onInputChange:function onInputChange(e,props){return function handleInputChange(e,props){(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onInputChange")(e,props),setValue(props.value)}(e,props)},onFocus:function onFocus(e,props){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onFocus")(e,props)},onBlur:function onBlur(e,props){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onBlur")(e,props)},onKeyPress:function onKeyPress(e,props){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onKeyPress")(e,props)},onKeyUp:function onKeyUp(e,props){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onKeyUp")(e,props)},onKeyDown:function onKeyDown(e,props){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onKeyDown")(e,props)},onInvalid:function onInvalid(e,props){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onInvalid")(e,props)},onButtonClick:function onButtonClick(e,props){return function handleButtonClick(e,props){(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onButtonClick")(e,props),setValue("")}(e,props)},required:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.sJ,{name:"clear16",buttonAriaLabel:"Clear",style:{opacity:value.length?"1":"0"}})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ebay_button__WEBPACK_IMPORTED_MODULE_2__.aG,{onClick:function onClick(e){var _ref$current;e.preventDefault(),null===(_ref$current=ref.current)||void 0===_ref$current||_ref$current.reportValidity()},children:"Check value presence"})})]})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(TestComponent,{})})},name:"Testing callbacks"},DisabledTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{disabled:!0})})},name:"Disabled textbox"},PlaceholderTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{placeholder:"placeholder text"})})},name:"Placeholder textbox"},InvalidTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{invalid:!0})})},name:"Invalid textbox"},FluidTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{fluid:!0})})},name:"Fluid textbox"},PasswordTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{type:"password"})})},name:"Password textbox"},MultilineTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{multiline:!0,defaultValue:"some default value\nnext line"})})},name:"Multiline textbox"},MultilineInvalidTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{multiline:!0,invalid:!0,defaultValue:"some default value"})})},name:"Multiline invalid textbox"},AutofocusedTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{autoFocus:!0,placeholder:"Should focus here"})})},name:"Autofocused textbox"},LargeTextbox={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{placeholder:"placeholder text",inputSize:"large"})})},name:"Large textbox"},WithIcon={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{placeholder:"email",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.NA,{name:"mail16"})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{placeholder:"username",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.sJ,{name:"profile20"})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{placeholder:"search",onButtonClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("Clear!"),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.NA,{name:"search16"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.sJ,{name:"clear16",buttonAriaLabel:"Clear"})]})})]})},name:"With icon"},ControlValueFromOutside={render:function render(){var Component=function Component(){var _useState4=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),2),value=_useState4[0],setValue=_useState4[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{onInputChange:function handleOnChange(e,props){setValue(props.value.substring(0,10))},value,placeholder:"Max 10 chars"})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Component,{})})},name:"Control value from outside"},RefForwarding={render:function render(){var ref=react__WEBPACK_IMPORTED_MODULE_0__.createRef();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{forwardedRef:ref})})},name:"Ref forwarding"},FloatingLabel={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{floatingLabel:"Floating label",onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onChange"),onInputChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onInputChange"),onFloatingLabelInit:function onFloatingLabelInit(){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onFloatingLabelInit")()}})},name:"Floating label"},FloatingLabelTypeDate={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{type:"date",floatingLabel:"Floating label",onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onChange"),onInputChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onInputChange"),onFloatingLabelInit:function onFloatingLabelInit(){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onFloatingLabelInit")()}})},name:"Floating label type date"},FloatingLabelWithValue={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("textbox-changed"),floatingLabel:"Floating label",defaultValue:"Default value"})},name:"Floating label with value"},FloatingLabelInvalid={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{invalid:!0,onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("textbox-changed"),floatingLabel:"Invalid Floating label"})},name:"Floating label invalid"},FloatingLabelWithAutofocus={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{floatingLabel:"Regular field"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{floatingLabel:"Autofocused field",autoFocus:!0,onFocus:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onFocus")})})]})},name:"Floating label with autofocus"},FloatingLabelWithPlaceholderControlled={render:function render(){var Component=function Component(){var _useState6=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),2),value=_useState6[0],setValue=_useState6[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{floatingLabel:"Will convert to lowercase",placeholder:"Enter some UPPERCASE",onChange:function handleOnChange(e,_ref){var newValue=_ref.value;setValue(newValue.toLowerCase())},value,size:30})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ebay_button__WEBPACK_IMPORTED_MODULE_2__.aG,{onClick:function onClick(){setValue("changed text")},children:"Change text"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ebay_button__WEBPACK_IMPORTED_MODULE_2__.aG,{onClick:function onClick(){setValue("")},children:"Clear"})})]})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(Component,{})})},name:"Floating label with placeholder, controlled"},FloatingLabelWithMultiline={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("textbox-changed"),floatingLabel:"Floating label",multiline:!0})},name:"Floating label with multiline"},FloatingLabelWithMultilineAndOpaqueLabel={render:function render(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_index__WEBPACK_IMPORTED_MODULE_3__.kB,{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("textbox-changed"),floatingLabel:"Floating label",multiline:!0,opaqueLabel:!0})},name:"Floating label with multiline and opaque label"};DefaultTextbox.parameters={...DefaultTextbox.parameters,docs:{...DefaultTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <EbayTextbox defaultValue=\"EbayTextbox\" />,\n  name: 'Default textbox'\n}",...DefaultTextbox.parameters?.docs?.source}}},TestingCallbacks.parameters={...TestingCallbacks.parameters,docs:{...TestingCallbacks.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const TestComponent: FC = () => {\n      const ref = React.useRef(null);\n      const [value, setValue] = useState('');\n      const handleInputChange = (e: ChangeEvent<HTMLTextAreaElement & HTMLInputElement>, props: {\n        value: string;\n      }) => {\n        action('onInputChange')(e, props);\n        setValue(props.value);\n      };\n      const handleButtonClick = (e: KeyboardEvent & MouseEvent<HTMLTextAreaElement & HTMLInputElement>, props: {\n        value: string;\n      }) => {\n        action('onButtonClick')(e, props);\n        setValue('');\n      };\n      return <form ref={ref}>\n                    <p>\n                        <EbayTextbox value={value} onChange={(e, props) => action('onChange')(e, props)} onInputChange={(e, props) => handleInputChange(e, props)} onFocus={(e, props) => action('onFocus')(e, props)} onBlur={(e, props) => action('onBlur')(e, props)} onKeyPress={(e, props) => action('onKeyPress')(e, props)} onKeyUp={(e, props) => action('onKeyUp')(e, props)} onKeyDown={(e, props) => action('onKeyDown')(e, props)} onInvalid={(e, props) => action('onInvalid')(e, props)} onButtonClick={(e, props) => handleButtonClick(e, props)} required>\n                            <EbayTextboxPostfixIcon name=\"clear16\" buttonAriaLabel=\"Clear\" style={{\n              opacity: value.length ? '1' : '0'\n            }} />\n                        </EbayTextbox>\n                    </p>\n                    <p>\n                        <EbayButton onClick={e => {\n            e.preventDefault();\n            ref.current?.reportValidity();\n          }}>\n                            Check value presence\n                        </EbayButton>\n                    </p>\n                </form>;\n    };\n    return <>\n                <TestComponent />\n            </>;\n  },\n  name: 'Testing callbacks'\n}",...TestingCallbacks.parameters?.docs?.source}}},DisabledTextbox.parameters={...DisabledTextbox.parameters,docs:{...DisabledTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox disabled />\n        </>,\n  name: 'Disabled textbox'\n}",...DisabledTextbox.parameters?.docs?.source}}},PlaceholderTextbox.parameters={...PlaceholderTextbox.parameters,docs:{...PlaceholderTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox placeholder=\"placeholder text\" />\n        </>,\n  name: 'Placeholder textbox'\n}",...PlaceholderTextbox.parameters?.docs?.source}}},InvalidTextbox.parameters={...InvalidTextbox.parameters,docs:{...InvalidTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox invalid />\n        </>,\n  name: 'Invalid textbox'\n}",...InvalidTextbox.parameters?.docs?.source}}},FluidTextbox.parameters={...FluidTextbox.parameters,docs:{...FluidTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox fluid />\n        </>,\n  name: 'Fluid textbox'\n}",...FluidTextbox.parameters?.docs?.source}}},PasswordTextbox.parameters={...PasswordTextbox.parameters,docs:{...PasswordTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox type=\"password\" />\n        </>,\n  name: 'Password textbox'\n}",...PasswordTextbox.parameters?.docs?.source}}},MultilineTextbox.parameters={...MultilineTextbox.parameters,docs:{...MultilineTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox multiline defaultValue={'some default value\\nnext line'} />\n        </>,\n  name: 'Multiline textbox'\n}",...MultilineTextbox.parameters?.docs?.source}}},MultilineInvalidTextbox.parameters={...MultilineInvalidTextbox.parameters,docs:{...MultilineInvalidTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox multiline invalid defaultValue=\"some default value\" />\n        </>,\n  name: 'Multiline invalid textbox'\n}",...MultilineInvalidTextbox.parameters?.docs?.source}}},AutofocusedTextbox.parameters={...AutofocusedTextbox.parameters,docs:{...AutofocusedTextbox.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <EbayTextbox autoFocus placeholder=\"Should focus here\" />\n        </>,\n  name: 'Autofocused textbox'\n}",...AutofocusedTextbox.parameters?.docs?.source}}},LargeTextbox.parameters={...LargeTextbox.parameters,docs:{...LargeTextbox.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n            <EbayTextbox placeholder="placeholder text" inputSize="large" />\n        </>,\n  name: \'Large textbox\'\n}',...LargeTextbox.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:'{\n  render: () => <div>\n            <p>\n                <EbayTextbox placeholder="email">\n                    <EbayTextboxPrefixIcon name="mail16" />\n                </EbayTextbox>\n            </p>\n            <p>\n                <EbayTextbox placeholder="username">\n                    <EbayTextboxPostfixIcon name="profile20" />\n                </EbayTextbox>\n            </p>\n            <p>\n                <EbayTextbox placeholder="search" onButtonClick={action(\'Clear!\')}>\n                    <EbayTextboxPrefixIcon name="search16" />\n                    <EbayTextboxPostfixIcon name="clear16" buttonAriaLabel="Clear" />\n                </EbayTextbox>\n            </p>\n        </div>,\n  name: \'With icon\'\n}',...WithIcon.parameters?.docs?.source}}},ControlValueFromOutside.parameters={...ControlValueFromOutside.parameters,docs:{...ControlValueFromOutside.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const Component = () => {\n      const [value, setValue] = useState('');\n      const handleOnChange = (e, props) => {\n        setValue(props.value.substring(0, 10));\n      };\n      return <EbayTextbox onInputChange={handleOnChange} value={value} placeholder=\"Max 10 chars\" />;\n    };\n    return <>\n                <Component />\n            </>;\n  },\n  name: 'Control value from outside'\n}",...ControlValueFromOutside.parameters?.docs?.source}}},RefForwarding.parameters={...RefForwarding.parameters,docs:{...RefForwarding.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const ref = (React.createRef() as any);\n    return <>\n                <EbayTextbox forwardedRef={ref} />\n            </>;\n  },\n  name: 'Ref forwarding'\n}",...RefForwarding.parameters?.docs?.source}}},FloatingLabel.parameters={...FloatingLabel.parameters,docs:{...FloatingLabel.parameters?.docs,source:{originalSource:"{\n  render: () => <EbayTextbox floatingLabel=\"Floating label\" onChange={action('onChange')} onInputChange={action('onInputChange')} onFloatingLabelInit={() => action('onFloatingLabelInit')()} />,\n  name: 'Floating label'\n}",...FloatingLabel.parameters?.docs?.source}}},FloatingLabelTypeDate.parameters={...FloatingLabelTypeDate.parameters,docs:{...FloatingLabelTypeDate.parameters?.docs,source:{originalSource:"{\n  render: () => <EbayTextbox type=\"date\" floatingLabel=\"Floating label\" onChange={action('onChange')} onInputChange={action('onInputChange')} onFloatingLabelInit={() => action('onFloatingLabelInit')()} />,\n  name: 'Floating label type date'\n}",...FloatingLabelTypeDate.parameters?.docs?.source}}},FloatingLabelWithValue.parameters={...FloatingLabelWithValue.parameters,docs:{...FloatingLabelWithValue.parameters?.docs,source:{originalSource:"{\n  render: () => <EbayTextbox onChange={action('textbox-changed')} floatingLabel=\"Floating label\" defaultValue=\"Default value\" />,\n  name: 'Floating label with value'\n}",...FloatingLabelWithValue.parameters?.docs?.source}}},FloatingLabelInvalid.parameters={...FloatingLabelInvalid.parameters,docs:{...FloatingLabelInvalid.parameters?.docs,source:{originalSource:"{\n  render: () => <EbayTextbox invalid onChange={action('textbox-changed')} floatingLabel=\"Invalid Floating label\" />,\n  name: 'Floating label invalid'\n}",...FloatingLabelInvalid.parameters?.docs?.source}}},FloatingLabelWithAutofocus.parameters={...FloatingLabelWithAutofocus.parameters,docs:{...FloatingLabelWithAutofocus.parameters?.docs,source:{originalSource:"{\n  render: () => <>\n            <p>\n                <EbayTextbox floatingLabel=\"Regular field\" />\n            </p>\n            <p>\n                <EbayTextbox floatingLabel=\"Autofocused field\" autoFocus onFocus={action('onFocus')} />\n            </p>\n        </>,\n  name: 'Floating label with autofocus'\n}",...FloatingLabelWithAutofocus.parameters?.docs?.source}}},FloatingLabelWithPlaceholderControlled.parameters={...FloatingLabelWithPlaceholderControlled.parameters,docs:{...FloatingLabelWithPlaceholderControlled.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const Component = () => {\n      const [value, setValue] = useState('');\n      const handleOnChange = (e, {\n        value: newValue\n      }) => {\n        setValue(newValue.toLowerCase());\n      };\n      return <>\n                    <p>\n                        <EbayTextbox floatingLabel=\"Will convert to lowercase\" placeholder=\"Enter some UPPERCASE\" onChange={handleOnChange} value={value} size={30} />\n                    </p>\n                    <p>\n                        <EbayButton onClick={() => {\n            setValue('changed text');\n          }}>\n                            Change text\n                        </EbayButton>\n                    </p>\n                    <p>\n                        <EbayButton onClick={() => {\n            setValue('');\n          }}>\n                            Clear\n                        </EbayButton>\n                    </p>\n                </>;\n    };\n    return <>\n                <Component />\n            </>;\n  },\n  name: 'Floating label with placeholder, controlled'\n}",...FloatingLabelWithPlaceholderControlled.parameters?.docs?.source}}},FloatingLabelWithMultiline.parameters={...FloatingLabelWithMultiline.parameters,docs:{...FloatingLabelWithMultiline.parameters?.docs,source:{originalSource:"{\n  render: () => <EbayTextbox onChange={action('textbox-changed')} floatingLabel=\"Floating label\" multiline />,\n  name: 'Floating label with multiline'\n}",...FloatingLabelWithMultiline.parameters?.docs?.source}}},FloatingLabelWithMultilineAndOpaqueLabel.parameters={...FloatingLabelWithMultilineAndOpaqueLabel.parameters,docs:{...FloatingLabelWithMultilineAndOpaqueLabel.parameters?.docs,source:{originalSource:"{\n  render: () => <EbayTextbox onChange={action('textbox-changed')} floatingLabel=\"Floating label\" multiline opaqueLabel />,\n  name: 'Floating label with multiline and opaque label'\n}",...FloatingLabelWithMultilineAndOpaqueLabel.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultTextbox","TestingCallbacks","DisabledTextbox","PlaceholderTextbox","InvalidTextbox","FluidTextbox","PasswordTextbox","MultilineTextbox","MultilineInvalidTextbox","AutofocusedTextbox","LargeTextbox","WithIcon","ControlValueFromOutside","RefForwarding","FloatingLabel","FloatingLabelTypeDate","FloatingLabelWithValue","FloatingLabelInvalid","FloatingLabelWithAutofocus","FloatingLabelWithPlaceholderControlled","FloatingLabelWithMultiline","FloatingLabelWithMultilineAndOpaqueLabel"]}}]);